[tool:pytest]
# Minimum pytest version required
minversion = 6.0

# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Default command line options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=mfg_pde
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=70
    --durations=10

# Custom markers for test categorization
markers =
    unit: Unit tests (fast, isolated components)
    integration: Integration tests (cross-component interactions)
    performance: Performance tests (may be slow, measures timing/memory)
    mathematical: Mathematical property validation (mass conservation, etc.)
    slow: Slow tests (may take >10 seconds to complete)
    regression: Regression tests for specific bug fixes
    experimental: Tests for experimental features (may be unstable)

# Warning filters
filterwarnings =
    # Ignore deprecation warnings from our own package during transition
    ignore::DeprecationWarning:mfg_pde.*
    ignore::PendingDeprecationWarning
    # Ignore specific warnings from dependencies
    ignore::UserWarning:matplotlib.*
    ignore::RuntimeWarning:numpy.*
    # Convert these warnings to errors for strict testing
    error::UserWarning:mfg_pde.*:
    # Allow specific warnings we expect during testing
    ignore:Parameter.*is deprecated:DeprecationWarning

# Test collection configuration
collect_ignore = [
    "archive",
    "build", 
    "dist",
    "docs",
    ".git"
]

# Logging configuration for tests
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test execution configuration
timeout = 300  # 5 minutes timeout for individual tests
timeout_method = thread
# UV-powered pre-commit configuration for MFG_PDE (modernized)
# Uses UV package manager for faster, reproducible development workflow
# Configuration read from pyproject.toml for consistency

repos:
  # Auto-fixing formatters (uv-powered for speed)
  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black
        args: [--line-length=120]
        language: system
        entry: uv run black
        require_serial: false

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=120]
        language: system
        entry: uv run isort
        require_serial: false

  # Essential safety checks (fast system commands)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: \.md$
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-added-large-files
        args: [--maxkb=1000]

  # UV-powered quality checks (development-friendly)
  - repo: local
    hooks:
      # MyPy type checking with uv (core modules only)
      - id: mypy-uv
        name: MyPy type checking (uv)
        entry: uv run mypy
        language: system
        args: [--ignore-missing-imports, --no-strict-optional, --allow-untyped-calls]
        files: ^mfg_pde/(core|factory)/.*\.py$
        require_serial: false

      # Flake8 linting with uv (scientific computing friendly)
      - id: flake8-uv
        name: Flake8 linting (uv)
        entry: uv run flake8
        language: system
        args: [
          --max-line-length=120,
          --extend-ignore=E203,W503,F401,F841,E501,E402
        ]
        files: ^mfg_pde/(core|factory)/.*\.py$
        require_serial: false

      # PyTest with uv (fast unit tests)
      - id: pytest-uv
        name: Run unit tests (uv)
        entry: uv run pytest
        language: system
        args: [tests/unit/, -x, --tb=short]
        pass_filenames: false
        require_serial: true

      # MFG-specific quality checks
      - id: no-emojis-in-python
        name: No emojis in Python source files
        entry: python
        args: [-c, "
import sys, re;
files = [f for f in sys.argv[1:] if f.endswith('.py')];
violations = [f for f in files if re.search(r'[^\x00-\x7F]', open(f, encoding='utf-8').read())];
[print(f'❌ {f}: Contains emojis (violates CLAUDE.md)') for f in violations];
sys.exit(1 if violations else 0)
"]
        language: system
        files: ^mfg_pde/.*\.py$
        require_serial: false

      # Import verification with uv
      - id: import-check-uv
        name: Check imports work (uv)
        entry: uv run python
        language: system
        args: [-c, "
import sys;
try:
    import mfg_pde;
    from mfg_pde.backends import get_backend_info;
    print('✅ Core imports successful');
except ImportError as e:
    print(f'❌ Import failed: {e}');
    sys.exit(1)
"]
        pass_filenames: false
        require_serial: true

# UV environment configuration
default_language_version:
  python: python3.12

# Performance optimizations
default_stages: [pre-commit]
minimum_pre_commit_version: "3.0.0"

# UV-specific optimizations
ci:
  autofix_prs: true
  autoupdate_schedule: weekly

# Modern pre-commit configuration for MFG_PDE using Ruff
# Unified linting and formatting with 10-100x faster performance
# Uses pyproject.toml settings for all configuration
#
# Alternative configurations available:
# - .pre-commit-config-legacy.yaml (Black + isort + Pylint)
# - .pre-commit-config-uv.yaml (UV-powered Ruff)

repos:
  # Unified formatting and linting with Ruff (replaces Black + isort + Pylint)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.8
    hooks:
      # Format code (replaces Black + isort)
      - id: ruff-format
        # Configuration read from pyproject.toml [tool.ruff.format] and [tool.ruff.lint.isort]

      # Lint code (replaces Pylint + flake8)
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        # Configuration read from pyproject.toml [tool.ruff.lint]

  # Essential safety checks (low friction, prevent bugs)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: \.md$
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-added-large-files
        args: [--maxkb=1000]
        exclude: ^uv\.lock$

  # Type checking for core mathematical modules (gradual re-enablement)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.2
    hooks:
      - id: mypy
        files: ^mfg_pde/(simple\.py|core/__init__\.py|core/mfg_problem\.py|types/.*\.py|geometry/__init__\.py|geometry/base_geometry\.py|geometry/domain_1d\.py|geometry/domain_2d\.py|geometry/mesh_manager\.py|geometry/boundary_manager\.py|factory/__init__\.py|factory/solver_factory\.py|factory/backend_factory\.py|factory/general_mfg_factory\.py|factory/pydantic_solver_factory\.py|config/.*\.py|alg/__init__\.py|alg/base_mfg_solver\.py|alg/fp_solvers/__init__\.py|alg/fp_solvers/base_fp\.py|alg/hjb_solvers/__init__\.py|alg/hjb_solvers/base_hjb\.py|alg/hjb_solvers/hjb_fdm\.py|alg/mfg_solvers/__init__\.py|alg/variational_solvers/__init__\.py|alg/variational_solvers/base_variational\.py|utils/__init__\.py|utils/aux_func\.py|utils/validation\.py|utils/solver_result\.py|utils/exceptions\.py|utils/integration\.py|utils/logging\.py|utils/cli\.py|workflow/__init__\.py|workflow/decorators\.py|workflow/workflow_manager\.py|workflow/parameter_sweep\.py|meta/__init__\.py|meta/type_system\.py)$
        args: [--follow-imports=silent, --ignore-missing-imports]
        additional_dependencies: [numpy, scipy, pydantic, types-tqdm, types-PyYAML, types-setuptools]

# Performance optimizations
default_language_version:
  python: python3.12

default_stages: [pre-commit]
minimum_pre_commit_version: "3.0.0"
